{% extends parent_template %}

{% block title %}
    {% if record|default is not empty %}
        {{ record.formatted_name }} - {{ Lang.get('user.send_email') }}
    {% else %}
        {{ Lang.get('user.mass_email') }}
    {% endif %}
{% endblock %}

{% block content %}

    {% if record|default is not empty %}
        {% include 'operator.' ~ template ~ '.user.forms.user_tabs' %}

        {{ form_open({ 'route': [ 'user.operator.user.sendemail', record.id ], 'class': 'validate' }) }}
    {% else %}
        {{ form_open({ 'route': 'user.operator.massemail.queue', 'class': 'validate' }) }}
    {% endif %}

        <div class="form-container {% if record|default is empty %}first"{% else %}" style="padding-top: 0;"{% endif %}>

            {% if record|default is not empty %}
                <input type="hidden" name="brand_id" value="{{ record.brand_id }}" />
            {% else %}
                {% if brand_count(true) > 1 %}
                    <div class="form-row small-selectize">
                        {{ form_label('brand_id', Lang.choice('core.brand', 1)) }}
                        <div class="input-container">
                            {{ form_select('brand_id', enabledBrands.pluck('name', 'id'), Config.get('settings.default_brand')) }}
                            <br />
                            <span class="description">{{ Lang.get('core.mass_email_brand_desc') }}</span>
                        </div>
                    </div>
                {% else %}
                    <input type="hidden" name="brand_id" value="{{ enabledBrands|first.id }}" />
                {% endif %}
            {% endif %}

            <div class="form-row form-full">
                {{ form_label('to[]', Lang.get('general.to')|capitalize) }}
                <div class="input-container">
                    {% if record|default is not empty %}
                        {{ record.formatted_name }} {{ '<' ~ record.email ~ '>' }}
                    {% else %}
                        <select name="to[]" multiple="multiple">
                            <option value="all-users">{{ Lang.get('user.all_users') }}</option>
                            <option value="all-operators">{{ Lang.get('user.all_operators') }}</option>
                            <optgroup label="{{ Lang.choice("user.operator_group", 2) }}">
                                {% for group in operator_groups %}
                                    <option data-data='{{ group|json_encode(constant('JSON_FORCE_OBJECT')) }}' value='{{ group.id }}'>
                                        {{ group.name }}
                                    </option>
                                {% endfor %}
                            </optgroup>
                            <optgroup label="{{ Lang.choice("user.group", 2) }}">
                                {% for group in user_groups %}
                                    <option data-data='{{ group|json_encode(constant('JSON_FORCE_OBJECT')) }}' value='{{ group.id }}'>
                                        {{ group.name }}
                                    </option>
                                {% endfor %}
                            </optgroup>
                        </select>
                    {% endif %}
                </div>
            </div>

            <div class="form-row">
                {{ form_label('from_name', Lang.get('general.from')) }}
                <div class="input-container">
                    {{ form_text('from_name', '', { 'size': '25' }) }} &nbsp;
                    {{ form_text('from_email', '', { 'size': '35' }) }}
                </div>
            </div>

            {% if not templates.isEmpty() %}
            <div class="form-row">
                {{ form_label('load_template', Lang.get('user.load_template')) }}
                <div class="input-container">
                    <div class="input-with-button">
                        {{ form_select('load_template', templates) }}&nbsp;
                        {{ form_button(Lang.get('user.clear_template'), { 'class': 'clear-form' }) }}
                    </div>
                    <span class="description">{{ Lang.get('user.load_template_desc') }}</span>
                </div>
            </div>
            {% endif %}

            <div class="form-row form-full">
                {{ form_label('subject', Lang.get('general.subject')) }}
                <div class="input-container">
                    {{ form_text('subject') }}
                </div>
            </div>

            <div class="form-row form-full">
                {{ form_label('contents', Lang.choice('general.message', 1)) }}
                <div class="input-container">
                    <div>
                        {{ form_redactor_mf('contents') }}
                        {% if cumulative_attachment_limit != 0 %}
                        <ul class="attached-files">
                            <li class="hide">
                                <i class="fa fa-file"></i>
                                &nbsp;
                                <span class="information">
                                <span class="filename ellipsis"></span>
                                &nbsp;
                                <span class="filesize"></span>
                            </span>
                                <i class="fa fa-times deleteAttachment right hide"></i>
                                <div class="progress">
                                    <div class="bar"></div>
                                </div>
                            </li>
                        </ul>

                        <div class="attachment-dragover hide">
                            {{ Lang.get('general.drag_and_drop') }}
                        </div>

                        <label class="file-input button" style="margin-right: 10px">
                            <i class="fa fa-paperclip"></i>&nbsp; {{ Lang.get('general.add_attachment') }}
                            <input class="fileupload" type="file" name="files[]"
                                   data-url="{{ route('ticket.operator.attachment.upload') }}" multiple="multiple">
                        </label>
                        {% endif %}
                    </div>

                    <div class="attachment-details">
                        <input type="hidden" name="attachment[]" disabled="disabled" />
                    </div>
                </div>
            </div>

            {% if record is not defined %}
                <div class="form-row">
                    {{ form_label('batch_number', Lang.get('user.email_per_batch')) }}
                    <div class="input-container">
                        {{ form_text('batch_number', 50, { 'size': 3 }) }}<br />
                        <span class="description">{{ Lang.get('user.email_per_batch_desc') }}</span>
                    </div>
                </div>

                <div class="form-row">
                    {{ form_label('batch_interval', Lang.get('user.batch_interval')) }}
                    <div class="input-container">
                        {{ form_text('batch_interval', 1, { 'size': 2 }) }}<br />
                        <span class="description">{{ Lang.get('user.batch_interval_desc') }}</span>
                    </div>
                </div>
            {% endif %}

        </div>

        <div class="form-button">
            {{ form_submit(Lang.choice('general.submit', 1)) }} <span class="sending-time description"></span>
        </div>

    {{ form_close() }}

{% endblock %}

{% block scripts_footer %}
    {% if jsValidator|default is not empty %}
        {{ jsValidator|raw }}
    {% endif %}

    <!-- Selectize -->
    <link href="{{ asset_rev('resources/assets/libs/selectize/css/selectize.css') }}" rel="stylesheet" />
    <script src="{{ asset_rev('resources/assets/libs/selectize/js/selectize.min.js') }}"></script>
    <script src="{{ asset_rev('resources/assets/operator/js/selectize/disable_delete.js') }}"></script>

    <!-- Redactor -->
    <script src="{{ asset_rev('resources/assets/libs/redactor/js/redactor.min.js') }}"></script>
    <script src="{{ asset_rev('resources/assets/general/js/redactor_config.js') }}"></script>
    <link rel="stylesheet" type="text/css" href="{{ asset_rev('resources/assets/libs/redactor/css/redactor.css') }}">
    <script src="{{ asset_rev('resources/assets/libs/redactor/js/plugins.min.js') }}"></script>

    <!-- Attachments -->
    <script src="{{ asset_rev('resources/assets/libs/blueimp-file-upload/js/jquery.fileupload.min.js') }}"></script>
    <script src="{{ asset_rev('resources/assets/general/js/fileupload.js') }}"></script>
    <script src="{{ asset_rev('resources/assets/operator/js/delete.alert.js') }}"></script>
    <script type="text/javascript">
        new FileUpload({
            blueimp: {
                cumulativeMaxFileSize: {{ cumulative_attachment_limit }}
            }
        });
    </script>

    <!-- Code Editor -->
    <script src="{{ asset_rev('resources/assets/libs/codemirror/js/codemirror.min.js') }}"></script>
    <link rel="stylesheet" href="{{ asset_rev('resources/assets/libs/codemirror/css/codemirror.css') }}">
    <script src="{{ asset_rev('resources/assets/libs/sweetalert2/js/sweetalert2.min.js') }}"></script>
    <link rel="stylesheet" type="text/css" href="{{ asset_rev('resources/assets/libs/sweetalert2/css/sweetalert2.css') }}">
    <link rel="stylesheet" type="text/css" href="{{ asset_rev('resources/assets/operator/css/codeeditor.css') }}" />
    <script type="text/javascript" src="{{ asset_rev('resources/assets/operator/js/redactor/codeeditor.js') }}"></script>

    <script src="{{ asset_rev('resources/assets/operator/js/redactor/mergefields.js') }}"></script>
    <script type="text/javascript">
        $(document).ready(function() {
            var REGEX_EMAIL = '([a-z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&\'*+/=?^_`{|}~-]+)*@' +
                      '(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?)';

            // Build an array of brand names and emails
            var brandDetails = [];
            {% for brand in brand_config(null) %}
                brandDetails[{{ brand.id }}] = {name: '{{ brand.name }}', email: '{{ brand.default_email }}'};
            {% endfor %}

            // If we have multiple brands
            if ($('select[name="brand_id"]').length) {
                var $brandSelectize = $('select[name="brand_id"]').selectize({
                    plugins: ['disableDelete'],
                    placeholder: Lang.get('core.select_brand'),
                    onChange: function (item) {
                        // Set the from name and email based on the brand
                        $('input[name="from_name"]').val(brandDetails[item].name);
                        $('input[name="from_email"]').val(brandDetails[item].email);
                    }
                });
                // Initialise the from details based on pre-selected brand
                $brandSelectize[0].selectize.setValue($brandSelectize[0].selectize.getValue());
            } else {
                // Get brand ID from hidden field
                var brandId = $('input[name="brand_id"]').val();

                // Set the from name and email based on the brand
                $('input[name="from_name"]').val(brandDetails[brandId].name);
                $('input[name="from_email"]').val(brandDetails[brandId].email);
            }

            {% if record is not defined %}
                $('select[name="to[]"]').selectize({
                    persist: false,
                    maxItems: null,
                    valueField: 'email',
                    labelField: 'name',
                    searchField: ['name', 'email'],
                    plugins: ['remove_button'],
                    delimiter: ',',
                    placeholder: Lang.get('user.select_user_groups'),
                    render: {
                        item: function(item, escape) {
                            // validate e-mail address - we need this otherwise an unknown value gets added for user group
                            // items i.e. item.email is "1" for admin-default
                            var regex = new RegExp('^' + REGEX_EMAIL + '$', 'i'),
                                match = item.email.match(regex);

                            return '<div class="item">' +
                                    (item.name ? '<span class="name">' + escape(item.name) + '</span>' : '') +
                                    (match ? '<span class="email">' + escape(item.email) + '</span>' : '') +
                                    '</div>';
                        }
                    },
                    createFilter: function(input) {
                        var match, regex;

                        // email@address.com
                        regex = new RegExp('^' + REGEX_EMAIL + '$', 'i');
                        match = input.match(regex);
                        if (match) return !this.options.hasOwnProperty(match[0]);

                        // name <email@address.com>
                        regex = new RegExp('^([^<]*)\<' + REGEX_EMAIL + '\>$', 'i');
                        match = input.match(regex);
                        if (match) return !this.options.hasOwnProperty(match[2]);

                        return false;
                    },
                    create: function(input) {
                        if ((new RegExp('^' + REGEX_EMAIL + '$', 'i')).test(input)) {
                            return {email: input};
                        }
                        var match = input.match(new RegExp('^([^<]*)\<' + REGEX_EMAIL + '\>$', 'i'));
                        if (match) {
                            return {
                                email : match[2],
                                name  : $.trim(match[1])
                            };
                        }
                        return false;
                    }
                });
            {% endif %}

            var $editor = $('textarea').redactor($.extend($.Redactor.default_opts, {
                syntaxEmailTemplate: true,
                mergeFields: {
                    organisations: '{{ Config.get('settings.organisations_enabled') }}'
                },
                plugins: ['syntax', 'imagemanager', 'table', 'video', 'fontcolor', 'fontfamily', 'fontsize', 'mergeFields']
            }));

            // Load email template
            $('select[name="load_template"]').change(function() {
                if ($(this).val() != '0') {
                    // Fetch email template
                    $.ajax({
                        url: laroute.route('core.operator.emailtemplate.show', {
                            id: $(this).val(),
                            {% if record.id is not empty %}
                            user_id: '{{ record.id }}',
                            {% else %}
                            brand_id: $(this).parents('form').find(':input[name="brand_id"]').val(),
                            {% endif %}
                        }),
                        type: 'GET',
                        data: {},
                        dataType: 'json'
                    }).done(function(response) {
                        if (response.status == 'success') {
                            // Set subject and body
                            $('input[name="subject"]').val(response.data.subject);
                            $editor.redactor('code.set', response.data.contents);
                        }
                    });
                }
            });

            // Clear email template
            $('.clear-form').on('click', function() {
                $('input[name=subject]').val('');
                $editor.redactor('code.set', '');
                $('select[name="load_template"]').val(0);
            });

            // Work out how long it will take to send email when changing any important variable
            $('select[name="to[]"], input[name="batch_number"], input[name="batch_interval"]').on('change', function() {
                $.ajax({
                    url: laroute.route('user.operator.massemail.sendingtime'),
                    type: 'GET',
                    data: {
                        'to': $('select[name="to[]"]').val(),
                        'number': $('input[name="batch_number"]').val(),
                        'interval': $('input[name="batch_interval"]').val()
                    },
                    dataType: 'json'
                }).done(function(response) {
                    if (response.status == 'success') {
                        // Add sending time next to submit button
                        $('.sending-time').text(response.data);
                    } else {
                        // Some error, hide it
                        $('.sending-time').text('');
                    }
                });
            });
        });
    </script>
{% endblock %}