{% extends parent_template %}

{% block title %}
    {% if record|default is not empty and record.exists %}
        {{ Lang.get('general.edit_item', {'item': Lang.choice('selfservice.article', 1)}) }}
    {% else %}
        {{ Lang.get('general.add_item', {'item': Lang.choice('selfservice.article', 1)}) }}
    {% endif %}
{% endblock %}

{% block breadcrumb %}
    {{ Lang.get('selfservice.selfservice') }}
    &nbsp;&nbsp;<i class="fa fa-chevron-right" aria-hidden="true"></i>&nbsp;&nbsp;
    {% if type|default is not empty %}
        <a href="{{ route('selfservice.operator.type.index', { 'brand': type.brand_id }) }}">{{ type.brand.name }}</a>
        &nbsp;&nbsp;<i class="fa fa-chevron-right" aria-hidden="true"></i>&nbsp;&nbsp;
        <a href="{{ route('selfservice.operator.article.index', { 'type': type.id }) }}">{{ type.name }}</a>
        &nbsp;&nbsp;<i class="fa fa-chevron-right" aria-hidden="true"></i>&nbsp;&nbsp;
    {% else %}
        <a href="{{ route('selfservice.operator.article.index') }}">{{ Lang.choice('selfservice.article', 2) }}</a>
        &nbsp;&nbsp;<i class="fa fa-chevron-right" aria-hidden="true"></i>&nbsp;&nbsp;
    {% endif %}
    <strong>
        {{ Lang.get(record.exists ? 'general.edit_item' : 'general.add_item', {'item': Lang.choice('selfservice.article', 1)}) }}
    </strong>
{% endblock %}

{% block content %}

    {% if brandWarning %}
        <div class="warning box">
            <strong>{{ Lang.get('messages.warning') }}:</strong> {{ Lang.get('selfservice.article_brand_warning') }}
        </div>
    {% endif %}

    {% if record|default is not empty and record.exists %}
        {{ form_model(record, { 'route': [ 'selfservice.operator.article.update', record.id ], 'method': 'PUT', 'class': 'validate', 'id': 'articleForm' }) }}
    {% else %}
        {{ form_open({ 'route': [ 'selfservice.operator.article.store' ], 'class': 'validate', 'id': 'articleForm' }) }}
    {% endif %}

        <div id="sectionWrapper">

            <h2>{{ Lang.choice('selfservice.article', 1) }}</h2>
            <h2 class="description">{{ Lang.get('selfservice.article_desc') }}</h2>

            {# Required by multidimensionaldata.js #}
            <div class="tabContent">

                {# Hidden option for multidimensionaldata.js #}
                {% include 'operator.' ~ template ~ '.selfservice.forms.article_translation' with { 'hide': true } %}

                <div class="section-items">
                    {# Default article #}
                    <div class="form-container first open">
                        {%
                            include 'operator.' ~ template ~ '.selfservice.forms.article_rows'
                            with {
                                'elements': {
                                    'title': { 'name': 'title', 'value': record.getOriginal('title') },
                                    'keywords': { 'name': 'keywords', 'value': record.getOriginal('keywords') },
                                    'excerpt': { 'name': 'excerpt', 'value': record.getOriginal('excerpt') },
                                    'text': { 'name': 'text', 'value': record.getOriginal('text') },
                                    'attachments': { 'name': 'attachment', 'value': record.attachments.where('locale', null) },
                                }
                            }
                        %}
                    </div>

                    {# Existing Translations #}
                    {% for locale, translation in translations %}
                        {% include 'operator.' ~ template ~ '.selfservice.forms.article_translation' %}
                    {% endfor %}
                </div>

                <div class="form-container open {% if not availableLanguages|length %}hide{% endif %}">
                    <div class="form-row small-selectize">
                        <div class="input-container">
                            <select name="languages" title="{{ Lang.get('core.add_another_language') }}" class="add-item-selectize">
                                <option></option>
                                {% for code, name in availableLanguages %}
                                    <option value="{{ code }}">{{ name }}</option>
                                {% endfor %}
                            </select>
                        </div>
                    </div>
                </div>

            </div>

        </div>


        <h2>{{ Lang.choice('selfservice.category', 2) }}</h2>

        <div id="categories">

            {# Add an empty item, we use this for DOM cloning when adding new categories #}
            {% include 'operator.' ~ template ~ '.selfservice.forms.article_categories' with { 'hide': true } %}

            {# Add existing categories, if there aren't any then show an empty box... #}
            {% for i, record_type in record.types %}
                {% include 'operator.' ~ template ~ '.selfservice.forms.article_categories' %}
            {% else %}
                {% include 'operator.' ~ template ~ '.selfservice.forms.article_categories' with { 'i': 0, 'record_type': record.types.first() } %}
            {% endfor %}

            <div class="form-container open">
                <div class="form-row">
                    <div class="input-container">
                        {{ form_button(Lang.get('selfservice.add_to_another_type'), { 'id': 'add-type' }) }}
                    </div>
                </div>
            </div>

        </div>

        <h2>{{ Lang.choice('selfservice.tag', 2) }}</h2>

        <div class="form-container open first">

            <div class="form-row">
                {{ form_label('select', Lang.choice('selfservice.tag', 2)) }}
                <div class="input-container">
                    <select name="tag[]" multiple="multiple">
                        {% for tag in tags %}
                            <option {% if record|default is not empty and record.tags.contains('id', tag.id) %}selected="selected"{% endif %} value='{{ tag.name }}'>
                                {{ tag.name }}
                            </option>
                        {% endfor %}
                    </select>
                </div>
            </div>

        </div>

        <h2>{{ Lang.get('selfservice.visibility') }}</h2>

        <div class="form-container open first">

            <div class="form-row">
                {{ form_label('published', Lang.get('selfservice.published')) }}
                <div class="input-container">
                    {{ form_check('published', 1, record|default is not empty and record.exists ? record.published : true,
                    { 'class': 'toggle', 'id': 'toggle_published' }) }}
                    <label for="toggle_published"></label>
                    <br />
                    <span class="description">{{ Lang.get('selfservice.published_desc') }}</span>
                </div>
            </div>

            <div class="form-row" id="toggle_protected_container">
                {{ form_label('protected', Lang.get('selfservice.registered_users')) }}
                <div class="input-container">
                    {{ form_check('protected', 1, null, { 'class': 'toggle', 'id': 'toggle_protected' }) }}
                    <label for="toggle_protected"></label>
                    <br />
                    <span class="description">{{ Lang.get('selfservice.registered_users_desc') }}</span>
                </div>
            </div>

        </div>

        <div class="form-button">
            {{ form_submit(Lang.choice('general.submit', 1)) }}
        </div>

    {{ form_close() }}

{% endblock %}

{% block scripts_footer %}
    {% if jsValidator|default is not empty %}
        {{ jsValidator|raw }}
    {% endif %}

    <!-- Redactor -->
    <script src="{{ asset_rev('resources/assets/libs/redactor/js/redactor.min.js') }}"></script>
    <script src="{{ asset_rev('resources/assets/general/js/redactor_config.js') }}"></script>
    <link rel="stylesheet" type="text/css" href="{{ asset_rev('resources/assets/libs/redactor/css/redactor.css') }}">
    <script src="{{ asset_rev('resources/assets/libs/redactor/js/plugins.min.js') }}"></script>

    <!-- Code Editor -->
    <script src="{{ asset_rev('resources/assets/libs/codemirror/js/codemirror.min.js') }}"></script>
    <link rel="stylesheet" href="{{ asset_rev('resources/assets/libs/codemirror/css/codemirror.css') }}">
    <script src="{{ asset_rev('resources/assets/libs/sweetalert2/js/sweetalert2.min.js') }}"></script>
    <link rel="stylesheet" type="text/css" href="{{ asset_rev('resources/assets/libs/sweetalert2/css/sweetalert2.css') }}">
    <link rel="stylesheet" type="text/css" href="{{ asset_rev('resources/assets/operator/css/codeeditor.css') }}" />
    <script type="text/javascript" src="{{ asset_rev('resources/assets/operator/js/redactor/codeeditor.js') }}"></script>

    <!-- Attachments JS -->
    <script src="{{ asset_rev('resources/assets/libs/blueimp-file-upload/js/jquery.fileupload.min.js') }}"></script>
    <script src="{{ asset_rev('resources/assets/general/js/fileupload.js') }}"></script>
    <script src="{{ asset_rev('resources/assets/operator/js/delete.alert.js') }}"></script>
    <script type="text/javascript">
        $('.article:not(:first)').each(function (index) {
            new FileUpload({
                $element: $(this).find('.fileupload'),
                $container: $(this),
                inputName: $(this).find('.attachment-details')
                    .find('input[type=hidden]')
                    .prop('name')
                    .replace('[]', '')
            });
        });
    </script>

    <!-- Selectize -->
    <link href="{{ asset_rev('resources/assets/libs/selectize/css/selectize.css') }}" rel="stylesheet" />
    <script src="{{ asset_rev('resources/assets/libs/selectize/js/selectize.min.js') }}"></script>
    <script src="{{ asset_rev('resources/assets/operator/js/selectize/disable_delete.js') }}"></script>

    <script type="text/javascript">
        var tagPermission = {% if auth_user().hasPermission('create.selfservicetag') %}1{% else %}0{% endif %};
    </script>
    <script src="{{ asset_rev('resources/assets/operator/js/article.js') }}"></script>
    
    <script src="{{ asset_rev('resources/assets/operator/js/multidimensionaldata.js') }}"></script>
    <script type="text/javascript">
        // List of valid translatable attributes.
        var translatableAttributes = {{ translatableAttributes|json_encode|raw }};
        
        // Redactor options (used by article.js and multidimensionaldata.js).
        var opts = {
            plugins: ['syntax', 'imagemanager', 'table', 'video', 'fontcolor', 'fontfamily', 'fontsize']
        };

        // Custom attribute mapper for multidimensionaldata.js
        attributeMapper = function(elem, value, attribute) {
            var attr = elem.attr(attribute);
            if (typeof attr !== 'undefined') {
                // Special case: attachment:default[] should be transformed to attachment:en[]
                if (attr === 'attachment:default[]') {
                    elem.attr(attribute, translatableAttributes[value][attr.replace(':default[]', '')] + "[]");
                } else {
                    elem.attr(attribute, translatableAttributes[value][attr.replace(':default', '')]);
                }
            }
        };
    </script>
{% endblock %}